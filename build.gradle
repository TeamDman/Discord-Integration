buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.4.2"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    jarjar {
        transitive = true
    }
}

dependencies {
    jarjar "club.minnced:java-discord-rpc:${discord_rpc_version}"
    compile "club.minnced:java-discord-rpc:${discord_rpc_version}"
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mod_version}"
group= "${group_id}"
archivesBaseName = "${mod_name}-${minecraft_version}"
sourceCompatibility = targetCompatibility = '1.8'

minecraft {
    version = "${forge_version}"
    runDir = "run"
    
    mappings = "${mappings_version}"
    makeObfSourceJar = false
    
    replace "@VERSION@", project.version
    replaceIn "DiscordIntegration.java"
//    clientRunArgs += "--username=OwO"
}

jar {
    //basically shamelessly stolen from quat who stole from Clothesline's buildscript.

    //if you're here from browsing github for jar-in-jar examples:
    //don't forget to check the meta-inf folder, there's an important file in there.

    //copy all jarinjar-marked dependency jars into the libraries folder
    from(configurations.jarjar.files) {
        include "*"
        into "META-INF/libraries"
    }

    //add the forge containeddeps weirdness??? hopefully this works???
    manifest {
        attributes "ContainedDeps": configurations.jarjar.files.collect{it.name}.join(" ")
        attributes "Timestamp": System.currentTimeMillis()
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

import org.jetbrains.gradle.ext.*
idea {
    module {
        sourceDirs += file('src/main/java')
    }
    //noinspection GroovyAssignabilityCheck
    project {
        settings {
            runConfigurations {
                "Run Client"(Application) {
                    mainClass = 'GradleStart'
                    moduleName = getProject().idea.module.name
                }
                "Run Server"(Application) {
                    mainClass = 'GradleStartServer'
                    moduleName = getProject().idea.module.name
                }
            }
            copyright {}
        }
    }
}
